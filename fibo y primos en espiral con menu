#include <iostream>
#include <conio.h>
using namespace std;
void fibonacci_espiral(int a[], int t);
void mostrar(int a[], int t);
bool primo(int x);
void primo_espiral(int a[], int t);
void main()
{
	int A[50], n, op;
	do{
		cout<<"numero de elementos del vector"<<endl;
		cin>>n;
	}while(n<=0);
	do{
		cout<<"1 fibonacci es espiral"<<endl;
		cout<<"2 primo espiral"<<endl;
		cout<<"0 salir"<<endl;
		cin>>op;
		switch(op)
		{
		case 1:
			{
				fibonacci_espiral(A, n);
				mostrar(A, n);
				getch();
				break;
			}
		case 2:
			{
				primo_espiral(A, n);
				mostrar(A, n);
				getch();
				break;
			}
		case 0: cout<<"salir";
				break;
		default: cout<<"op incorrecta";
				 break;
		}
	}while(op!=0);
	getch();
}
void fibonacci_espiral(int a[], int t)
{
	int i, b=0, x=0, y=t-1;
	for(i=0; i<t; i++)
	{
		if(b==0)
		{
			if(i==0)
			{
				a[x]=0;
				x=x+1;
				b=1;
			}
			if(i>1)
			{
				a[x]=a[x-1]+a[y+1];
				x=x+1;
				b=1;
			}
		}
		else
		{
			if(i==1)
			{
				a[y]=1;
				y--;
				b=0;
			}
			if(i>1)
			{
				a[y]=a[x-1]+a[y+1];
				y--;
				b=0;
			}
		}
	}
}
void mostrar(int a[], int t)
{
	int i;
	for(i=0; i<t; i++)
	{
		cout<<"["<<i<<"]: "<<a[i]<<endl;
	}
}
bool primo(int x)
{
	int i=2, c=1;
	bool k=true;
	if(x==0)
		k=false;
	while(i<x)
	{
		if(x%i==0)
			k=false;
		if(x==0)
			k=false;
		i++;
	}
	return(k);
}
void primo_espiral(int a[], int t)
{
	int i, b=0, x=0, y=t-1, l=0, c=0;
	for(i=0; i<t; i++)
	{
		while(c==0)
		{
			if(primo(l)==true)
			{
				c=1;
			}
			else
			{
				l=l+1;
			}
		}
		if(b==0)
		{
			a[x]=l;
			x++;
			b=1;
		}
		else
		{
			a[y]=l;
			y--;
			b=0;
		}
		c=0;
		l++;
	}
}



